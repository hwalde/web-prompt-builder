*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    font-size: 16px; /* Base for rem units */
}

body {
    font-family: var(--font-family);
    line-height: 1.6;
    background-color: var(--light-color);
    color: var(--text-color);
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    padding: var(--spacing-unit);
}

/* Dark mode focus styles */
body.dark-mode input[type="text"]:focus,
body.dark-mode select:focus,
body.dark-mode textarea:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.4); /* Adjusted focus color for dark mode */
}

header {
    background-color: var(--primary-color);
    color: var(--white-color);
    padding: var(--spacing-unit);
    margin-bottom: calc(var(--spacing-unit) * 1.5);
    border-radius: var(--border-radius);
    text-align: center;
    position: relative; /* Needed for absolute positioning of toggle */
    position: relative; /* Needed for absolute positioning of toggle */
}

header h1 { margin-bottom: 5px; }

main {
    flex-grow: 1;
    max-width: 1000px;
    width: 100%;
    margin: 0 auto;
}

section {
    background-color: var(--white-color);
    padding: calc(var(--spacing-unit) * 1.5);
    margin-bottom: calc(var(--spacing-unit) * 1.5);
    border-radius: var(--border-radius);
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

h1, h2 {
    margin-bottom: var(--spacing-unit);
    color: var(--primary-color);
}
h1 { color: var(--white-color); }
body.dark-mode header h1 { color: var(--dark-color); }
h2 { border-bottom: 1px solid var(--border-color); padding-bottom: 0.5em;}

label {
    display: block;
    margin-bottom: 0.5em;
    font-weight: bold;
}

input[type="text"],
select,
textarea {
    width: 100%;
    padding: 0.75em 1em;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    font-size: 1rem;
    margin-bottom: var(--spacing-unit);
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

input[type="text"]:focus,
select:focus,
textarea:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    outline: none;
}

textarea {
    min-height: 150px;
    resize: vertical;
}

button, .btn {
    display: inline-flex; /* Wichtig f√ºr Icon + Text Alignment */
    align-items: center;
    justify-content: center;
    padding: 0.6em 1.2em;
    font-size: 1rem;
    border-radius: var(--border-radius);
    border: none;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    transition: background-color 0.2s ease, transform 0.1s ease, box-shadow 0.2s ease;
    margin: 0.25em; /* Kleiner Abstand zwischen Buttons */
    vertical-align: middle; /* Hilft bei Inline-Ausrichtung */
    gap: 0.5em; /* Abstand zwischen Icon und Text */
}
button:hover, .btn:hover {
    opacity: 0.9;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
button:active, .btn:active {
   transform: translateY(0px);
   box-shadow: none;
}

.btn-primary { background-color: var(--primary-color); color: var(--white-color); }
.btn-secondary { background-color: var(--secondary-color); color: var(--white-color); }
.btn-success { background-color: var(--success-color); color: var(--white-color); }
.btn-danger { background-color: var(--danger-color); color: var(--white-color); }
.btn-warning { background-color: var(--warning-color); color: var(--dark-color); } /* Better contrast for yellow */

/* Dark mode button text color override for warning */
body.dark-mode .btn-warning { color: var(--white-color); /* Darker text for light button in dark mode */ }

.btn-icon {
    display: inline-block;
    width: 1em; /* Width for icon placeholder */
    height: 1em; /* Height for icon placeholder */
    /* Style for the actual icon (e.g., checkmark) comes in animations.css */
}

.profile-controls,
.generation-controls {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-unit);
    align-items: center;
    margin-bottom: var(--spacing-unit);
}

.generation-controls {
    flex-wrap: nowrap;
}

.divider-vertical {
    width: 1px;
    height: 30px;
    background-color: var(--border-color);
    margin: 0 var(--spacing-unit);
}

.profile-controls label {
    margin-bottom: 0; /* No space below label in this row */
    margin-right: 0.5em;
}

.profile-controls select {
     flex-grow: 1; /* Select takes available space */
     margin-bottom: 0; /* No space below select in this row */
     min-width: 150px;
}

.xml-generation {
    display: flex;
    flex-wrap: nowrap;
    gap: var(--spacing-unit);
    align-items: center;
    flex: 1;
}
.xml-generation input[type="text"] {
     margin-bottom: 0; /* No space below input in this row */
     width: 100%;
}

#add-record-btn {
    margin-bottom: var(--spacing-unit);
}

.drag-hint {
    font-size: 0.9em;
    color: var(--text-muted);
    text-align: right;
    margin-top: 0.5em;
}

.copy-feedback {
    margin-top: 1em;
    padding: 0.5em 1em;
    border-radius: var(--border-radius);
    background-color: var(--success-color);
    color: var(--white-color);
    opacity: 0;
    transition: opacity 0.5s ease-out;
    text-align: center;
}

.copy-feedback.visible {
    opacity: 1;
}

footer {
    text-align: center;
    margin-top: calc(var(--spacing-unit) * 2);
    padding: var(--spacing-unit);
    color: var(--text-muted);
    font-size: 0.9em;
}

/* Helper classes */
.hidden {
    display: none !important;
}

/* Responsiveness */
@media (max-width: 768px) {
    .profile-controls,
    .generation-controls,
    .xml-generation {
         flex-direction: column;
         align-items: stretch;
    }
    .profile-controls select,
    .xml-generation input[type="text"] {
         width: 100%;
    }

     main {
         padding-left: 5px;
         padding-right: 5px;
     }
     section {
         padding: var(--spacing-unit);
     }

     .divider-vertical {
        width: 100%;
        height: 1px;
        margin: var(--spacing-unit) 0;
    }
}

#records-table .action-buttons .btn {
    margin: 0;
}

.btn-generate {
    white-space: nowrap;
}

#generate-traditional-btn .btn-icon, 
#generate-xml-btn .btn-icon {
    position: absolute;
    left: 0.8em;
}

#xml-root-tag {
    margin: 0.25em
}

.xml-root-tag-label {
    white-space: nowrap;
    font-weight: normal;
    margin-bottom: 0;
}

.xml-root-tag-container {
    display: flex;
    align-items: center;
    gap: 0.5em;
    width: 100%;
}

/* Remove obsolete styles for the old import-export section */

/* Responsive adjustments for the new section */
@media (max-width: 768px) {
    .import-export-controls {
         flex-direction: column;
         align-items: stretch;
    }
    .import-export-controls .btn {
        width: 100%; /* Make buttons full width on smaller screens */
    }
}

#dark-mode-toggle-container {
    position: absolute;
    margin-top: 5px;
    top: 50%;
    right: var(--spacing-unit);
    transform: translateY(-50%);
    display: flex;
    align-items: center;
}

.dark-mode-label {
    margin-right: 0.5em;
    font-size: 0.9em;
    color: var(--white-color);
    cursor: pointer;
}

.dark-mode-switch {
    position: relative;
    display: inline-block;
    width: 40px;  /* Smaller switch */
    height: 20px; /* Smaller switch */
}

.dark-mode-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc; /* Default off state */
    transition: .4s;
    border-radius: 20px; /* Matches height */
}

.slider:before {
    position: absolute;
    content: "";
    height: 16px; /* Smaller handle */
    width: 16px;  /* Smaller handle */
    left: 2px;   /* Adjust position */
    bottom: 2px;  /* Adjust position */
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: var(--primary-color); /* Use theme color for on state */
}

input:focus + .slider {
    box-shadow: 0 0 1px var(--primary-color);
}

input:checked + .slider:before {
    transform: translateX(20px); /* Move handle across */
}

/* Dark Mode Toggle Adjustments */
body.dark-mode .dark-mode-label {
    color: var(--text-color); /* Use dark mode text color */
}

body.dark-mode input:checked + .slider {
    background-color: #4a4a4a; 
}